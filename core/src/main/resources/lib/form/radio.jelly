<!--
The MIT License

Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define">
  <st:documentation> <![CDATA[
    <input type="radio"> tag that takes true/false for @checked, which is more Jelly friendly.

    Note that Safari doesn't support onchange.

    Beware that the name attribute should be uniquified among all radio blocks on the page, such as by prefixing it with "G0025." or whatever gensym.

    For a read only radio input set <j:set var="readOnlyMode" value="true"/> inside your entry tag
    See https://www.jenkins.io/doc/developer/views/read-only/#enabling-read-only-view-support
    ]]>
    <st:attribute name="name" />
    <st:attribute name="checked" />
    <st:attribute name="value" />
    <st:attribute name="id" />
    <st:attribute name="onclick" deprecated="true">
      Inline JavaScript to execute when the checkbox is clicked.
      Deprecated because this attribute is incompatible with adding Content-Security-Policy to the Jenkins UI in the future.
      Set 'id' or 'class' attributes as appropriate to look up this element in external Javascript files (e.g. adjuncts)
      to add the desired behavior there (DOMContentLoaded event in static forms, Behaviour.specify if this element may be
      dynamically added). See https://github.com/jenkinsci/jenkins/pull/6852 for an example.
    </st:attribute>
    <st:attribute name="title">
      If specified, this human readable text will follow the radio, and clicking this text also
      toggles the radio.
    </st:attribute>
  </st:documentation>
  <j:set var="itemId" value="${attrs.id ?: h.generateItemId()}" />
    <div class="jenkins-radio">
        <input class="jenkins-radio__input" type="radio" name="${attrs.name}" onclick="${attrs.onclick}"
               id="${itemId}" value="${attrs.value}" checked="${attrs.checked?'true':null}"
               disabled="${readOnlyMode?'true':null}" />
        <label class="jenkins-radio__label" for="${itemId}">${attrs.title}</label>
        <div class="jenkins-radio__children">
            <d:invokeBody />
        </div>
    </div>
</j:jelly>
